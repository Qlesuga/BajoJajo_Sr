services:
  yt-dlp:
    image: python
    restart: always
    build: ./yt-dlp/
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
    expose:
      - 8000
    ports:
      - 8000:8000
    env_file:
      - .env
    volumes:
      - music:/music
    networks:
      - app-network

  db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    volumes:
      - db:/var/lib/postgresql/data
      - music:/music
    expose:
      - 5432
    ports:
      - 5432:5432
    networks:
      - app-network

  redis:
    image: redis:7.4-alpine
    restart: always
    ports:
      - "6379:6379"
    expose:
      - 6379
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis:/data
    networks:
      - app-network

  next:
    build: .
    restart: always
    expose:
      - 3000
    ports:
      - 3000:3000
      - 5555:5555
    depends_on:
      - redis
      - cloudflared
      - yt-dlp
    links:
      - db
      - redis
      - yt-dlp
    env_file:
      - .env
    environment:
      - NODE_ENV=${ENVIRONMENT}
    networks:
      - app-network
    volumes:
      - music:/music
    develop:
      watch:
        - action: sync
          path: .
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json
        - action: rebuild
          path: .env
        - action: rebuild
          path: instrimentation.ts

  cloudflared:
    image: cloudflare/cloudflared:latest
    command: tunnel run
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARE_TOKEN}
      - TUNNEL_URL=http://next:3000
    restart: unless-stopped
    networks:
      - app-network

volumes:
  db:
    driver: local
  redis:
    driver: local
  music:
    driver: local

networks:
  app-network:
    driver: bridge
